vote_fu
=======

Allows an arbitrary number of entites (including Users) to vote on models. Adapted from act_as_voteable. Differences from acts_as_voteable include: 

1. You can specify the model name that initiates votes. 
2. You can, with a little tuning, have more than one entity type vote on more than one model type. 
3. Adds "acts_as_voter" behavior to the initiator of votes.


Install
_______

* Run the following command:
	./script/plugin install git://github.com/peteonrails/vote_fu.git 
	
* Create a new rails migration using the generator:
	./script/generate voteable
	
 
Usage
_____ 
* Make your ActiveRecord model act as voteable.
 
 class Model < ActiveRecord::Base
 	acts_as_voteable
 end

* Make your ActiveRecord model(s) that vote act as voter.

 class User < ActiveRecord::Base
 	acts_as_voter
 end

 class Robot < ActiveRecord::Base
 	acts_as_voter
 end

To cast a vote for a Model you can do the following:

  vote = Vote.new(:vote => true)
  m    = Model.find(params[:id])
  m.votes << vote

ActiveRecord models that act as voteable can be queried for the positive votes, negative votes, and a total vote count by using the votes_for, votes_against, and votes_count methods respectively. Here is an example:

positiveVoteCount = m.votes_for
negativeVoteCount = m.votes_against
totalVoteCount    = m.votes_count

And because the Vote Fu plugin will add the has_many votes relationship to your model you can always get all the votes by using the votes property:

allVotes = m.votes



Credits
_______

Juixe  - The original ActsAsVoteable plugin inspired this code. 
Xelipe - This plugin is heavily influenced by Acts As Commentable.

More
____

Documentation from the original acts_as_voteable plugin
http://www.juixe.com/techknow/index.php/2006/06/24/acts-as-voteable-rails-plugin/